---
description: SwiftMail project-specific coding standards and organization rules
globs: **/*
alwaysApply: true
---
 # SwiftMail Project Rules

## Code Organization

- Protocol conformances for types should always be in a separate file named `Type+Protocol.swift`
- Group extensions next to their model definitions in the file structure
- Move files on the file system rather than generating them unnecessarily
- Maintain a clear directory structure:
  - `Sources/SwiftIMAP/` - Code related to IMAP
  - `Sources/SwiftSMTP/` - Code related to SMTP
  - `Sources/SwiftMailCore/` - Code common to IMAP and SMTP implementations
  - `Demos` - Demo Apps
  - `Tests` - Test files
